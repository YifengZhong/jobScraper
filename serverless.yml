# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: jobScrapper # NOTE: update this with your service name

plugins:  
  #- serverless-dynamodb-local
  - serverless-offline
  - serverless-apigw-binary


# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
custom:
  apigwBinary:
    types:
      - 'application/pdf'
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true    
provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  role: arn:aws:iam::846925734496:role/Jbscrapper
  apiGateway:
    restApiId: eq6aot2q6b
    restApiRootResourceId: 0gfqpu7vs0
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - { "Fn::GetAtt": ["scrapperjobs", "Arn" ] }  
  environment:
    CUSTOM_CHROME: true      

functions:
  hello:
    handler: handler.hello
    memorySize: 1024
    timeout: 30
    events:
    - http:
        method: GET
        path: /
        cors: true
  Google:
    handler: googleJb.entry
    memorySize: 1024
    timeout: 30
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerGoogle
        rate: cron(50 10 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /google
        cors: true  
  Zillow:
    handler: zillow.entry
    memorySize: 1024
    timeout: 30
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerZillow
        rate: cron(55 10 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /zillow
        cors: true
  Uber:
    handler: uber.entry
    memorySize: 1024
    timeout: 60
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerUber
        rate: cron(0 11 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /uber
        cors: true
  Microsoft:
    handler: microsoft.entry
    memorySize: 1024
    timeout: 30
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerMicrosoft
        rate: cron(5 11 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /microsoft
        cors: true                        
  Netflix:
    handler: handler.sendSMS
    memorySize: 1024
    timeout: 25
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerNetflix
        rate: cron(10 11 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /netfix
        cors: true 
  LinkedIn:
    handler: linkedIn.entry
    memorySize: 1024
    timeout: 30
    tags:
    events:
    - schedule:
        name: JobScrapperSchedulerLinkedIn
        rate: cron(15 11 * * ? *)
        enabled: true
        input:
          receiver: "+15153055694"
          sender: "123456789"
          message: "from scheduler"
    - http:
        method: POST
        path: /linkedin
        cors: true               
resources:
  Resources:
    scrapperjobs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: scrapperjobs
        AttributeDefinitions:
          - AttributeName: listingId
            AttributeType: S
        KeySchema:
          - AttributeName: listingId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    